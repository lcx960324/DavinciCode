#encoding:utf-8

import tornado.ioloop
import tornado.web
import tornado.websocket
import tornado.httpserver
import json
import os, time, random

card=range(26)
rest_card = range(26) 

class HelloWorldHandler(tornado.websocket.WebSocketHandler):
	def check_origin(self, origin):
		return True

	def open(self,params):
		print 'websocket open'
		

	def my_sort(my_card):
		if 24 in my_card or 25 in my_card:
			return my_card

	def on_message(self,message):
		def first_passcard(n=3,my_card=[]):#发3张牌，放到my_card里
			gang = False #目前没有杠
			for x in range(n):
				while len(my_card)==x:
					index = random.randint(0,26-x)
					c = rest_card[index]
					if c==24 or c==25:
						if not gang:
							gang=True
						else:
							continue
					my_card.append(c)
					rest_card.remove(c)
	#		my_card = my_sort(my_card) #进行排序，然后返回
			return my_card
		my_card = []
		for number in first_passcard():
			c = []
			c.append(number)
			c.append(0)
			my_card.append(c)
		
		self.write_message(json.dumps(my_card))

	def on_close(self):
		print "WebSocket closed"

application = tornado.web.Application([
    (r"/(.*)", HelloWorldHandler),
])

if __name__ == "__main__":
   	http_server = tornado.httpserver.HTTPServer(application)
 	http_server.listen(8888)
   	tornado.ioloop.IOLoop.instance().start()


